"""Add email, created_at, and is_active columns to User

Revision ID: e27718b01ce6
Revises: c2f393b80d8e
Create Date: 2025-04-21 16:52:55.906799

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e27718b01ce6'
down_revision = 'c2f393b80d8e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.String(length=255), nullable=True))
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=64),
               type_=sa.String(length=80),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=128),
               nullable=True)
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_constraint('user_ibfk_1', type_='foreignkey')
        batch_op.drop_column('role_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('user_ibfk_1', 'role', ['role_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=128),
               nullable=False)
        batch_op.drop_column('is_active')
        batch_op.drop_column('created_at')
        batch_op.drop_column('email')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=80),
               type_=mysql.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.drop_column('description')

    op.drop_table('user_roles')
    # ### end Alembic commands ###
